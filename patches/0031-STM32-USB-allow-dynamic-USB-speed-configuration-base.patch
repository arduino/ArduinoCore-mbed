From 8cf437b59e7ce4694fc3c6f422f88be8cfdcf275 Mon Sep 17 00:00:00 2001
From: Martino Facchin <m.facchin@arduino.cc>
Date: Thu, 11 Mar 2021 11:50:18 +0100
Subject: [PATCH 31/87] STM32: USB: allow dynamic USB speed configuration based
 on bootloader parameters

---
 targets/TARGET_STM/USBPhy_STM32.cpp | 68 +++++++++++++++++++++++++++--
 1 file changed, 64 insertions(+), 4 deletions(-)

diff --git a/targets/TARGET_STM/USBPhy_STM32.cpp b/targets/TARGET_STM/USBPhy_STM32.cpp
index 1810bb6e29..c49788c376 100644
--- a/targets/TARGET_STM/USBPhy_STM32.cpp
+++ b/targets/TARGET_STM/USBPhy_STM32.cpp
@@ -201,10 +201,29 @@ void USB_reenumerate()
 }
 #endif
 
+#ifdef USB_DYNAMIC_CONFIGURATION
+#undef USBHAL_IRQn
+
+uint8_t getUSBSpeedFromBootloader() {
+    // 1 -> USE_USB_OTG_HS
+    // 2 -> USE_USB_OTG_FS
+    // 3 -> USE_USB_OTG_HS_IN_FS
+    uint8_t* bootloader_data = (uint8_t*)(0x801F000);
+    return bootloader_data[3];
+}
+#endif
+
 void USBPhyHw::init(USBPhyEvents *events)
 {
     const PinMap *map = NULL;
 
+#if defined(USB_DYNAMIC_CONFIGURATION)
+    auto USBHAL_IRQn = OTG_FS_IRQn;
+    if (getUSBSpeedFromBootloader() == 1) {
+        USBHAL_IRQn = OTG_HS_IRQn;
+    }
+#endif
+
     NVIC_DisableIRQ(USBHAL_IRQn);
 
     if (this->events == NULL) {
@@ -224,7 +243,12 @@ void USBPhyHw::init(USBPhyEvents *events)
     hpcd.Init.battery_charging_enable = DISABLE;
 #endif
 
-#if (MBED_CONF_TARGET_USB_SPEED == USE_USB_OTG_HS)
+#ifdef USB_DYNAMIC_CONFIGURATION
+    if (getUSBSpeedFromBootloader() == 1) {
+#endif
+
+#if defined(USB_DYNAMIC_CONFIGURATION) || (MBED_CONF_TARGET_USB_SPEED == USE_USB_OTG_HS)
+
     hpcd.Instance = USB_OTG_HS;
     hpcd.Init.phy_itface = PCD_PHY_ULPI;
     hpcd.Init.Sof_enable = 1;
@@ -239,7 +263,12 @@ void USBPhyHw::init(USBPhyEvents *events)
     __HAL_RCC_USB_OTG_HS_ULPI_CLK_SLEEP_ENABLE();
     map = PinMap_USB_HS;
 
-#elif (MBED_CONF_TARGET_USB_SPEED == USE_USB_HS_IN_FS)
+    #ifdef USB_DYNAMIC_CONFIGURATION
+    } if (getUSBSpeedFromBootloader() == 3) {
+    #endif
+#endif
+
+#if defined(USB_DYNAMIC_CONFIGURATION) || (MBED_CONF_TARGET_USB_SPEED == USE_USB_HS_IN_FS)
     hpcd.Instance = USB_OTG_HS;
     hpcd.Init.phy_itface = USB_OTG_EMBEDDED_PHY;
     hpcd.Init.Sof_enable = ENABLE;
@@ -259,7 +288,12 @@ void USBPhyHw::init(USBPhyEvents *events)
 
     map = PinMap_USB_HS;
 
-#elif (MBED_CONF_TARGET_USB_SPEED == USE_USB_OTG_FS)
+    #ifdef USB_DYNAMIC_CONFIGURATION
+    } if (getUSBSpeedFromBootloader() == 2) {
+    #endif
+#endif
+
+#if defined(USB_DYNAMIC_CONFIGURATION) || (MBED_CONF_TARGET_USB_SPEED == USE_USB_OTG_FS)
     hpcd.Instance = USB_OTG_FS;
     hpcd.Init.phy_itface = PCD_PHY_EMBEDDED;
     hpcd.Init.Sof_enable = 1;
@@ -276,7 +310,12 @@ void USBPhyHw::init(USBPhyEvents *events)
 
     map = PinMap_USB_FS;
 
-#elif (MBED_CONF_TARGET_USB_SPEED == USE_USB_NO_OTG)
+    #ifdef USB_DYNAMIC_CONFIGURATION
+    }
+    #endif
+#endif
+
+#if (MBED_CONF_TARGET_USB_SPEED == USE_USB_NO_OTG)
     hpcd.Instance = USB;
     hpcd.Init.phy_itface = PCD_PHY_EMBEDDED;
     hpcd.Init.speed = PCD_SPEED_FULL;
@@ -387,6 +426,13 @@ void USBPhyHw::deinit()
     HAL_StatusTypeDef ret = HAL_PCD_DeInit(&hpcd);
     MBED_ASSERT(ret == HAL_OK);
 
+#if defined(USB_DYNAMIC_CONFIGURATION)
+    auto USBHAL_IRQn = OTG_FS_IRQn;
+    if (getUSBSpeedFromBootloader() == 1) {
+        USBHAL_IRQn = OTG_HS_IRQn;
+    }
+#endif
+
     NVIC_DisableIRQ(USBHAL_IRQn);
 
     if (events != NULL) {
@@ -621,6 +667,13 @@ void USBPhyHw::endpoint_abort(usb_ep_t endpoint)
 
 void USBPhyHw::process()
 {
+#if defined(USB_DYNAMIC_CONFIGURATION)
+    auto USBHAL_IRQn = OTG_FS_IRQn;
+    if (getUSBSpeedFromBootloader() == 1) {
+        USBHAL_IRQn = OTG_HS_IRQn;
+    }
+#endif
+
     HAL_PCD_IRQHandler(&instance->hpcd);
     // Re-enable interrupt
     NVIC_ClearPendingIRQ(USBHAL_IRQn);
@@ -629,6 +682,13 @@ void USBPhyHw::process()
 
 void USBPhyHw::_usbisr(void)
 {
+#if defined(USB_DYNAMIC_CONFIGURATION)
+    auto USBHAL_IRQn = OTG_FS_IRQn;
+    if (getUSBSpeedFromBootloader() == 1) {
+        USBHAL_IRQn = OTG_HS_IRQn;
+    }
+#endif
+
     NVIC_DisableIRQ(USBHAL_IRQn);
     instance->events->start_process();
 }
-- 
2.30.2

