From 37924d23b8678d445a55e33068883c265febcea7 Mon Sep 17 00:00:00 2001
From: giulcioffi <g.cioffi@arduino.cc>
Date: Thu, 4 Mar 2021 11:05:14 +0100
Subject: [PATCH 56/87] RP2040: Check alignment + avoid passing const buf to
 flash_range_program()

---
 .../TARGET_RP2040/flash_api.c                 | 23 ++++++++++++++++---
 1 file changed, 20 insertions(+), 3 deletions(-)

diff --git a/targets/TARGET_RASPBERRYPI/TARGET_RP2040/flash_api.c b/targets/TARGET_RASPBERRYPI/TARGET_RP2040/flash_api.c
index 01f71958c5..fb1a28dd7f 100644
--- a/targets/TARGET_RASPBERRYPI/TARGET_RP2040/flash_api.c
+++ b/targets/TARGET_RASPBERRYPI/TARGET_RP2040/flash_api.c
@@ -38,6 +38,10 @@ int32_t flash_erase_sector(flash_t *obj, uint32_t address)
 
     address = address - XIP_BASE;
 
+    if ((address % FLASH_SECTOR_SIZE) != 0) {
+        return -1;
+    }
+
     core_util_critical_section_enter();
     flash_range_erase(address, FLASH_SECTOR_SIZE);
     core_util_critical_section_exit();
@@ -63,9 +67,22 @@ int32_t flash_program_page(flash_t *obj, uint32_t address, const uint8_t *data,
 
     address = address - XIP_BASE;
 
-    core_util_critical_section_enter();
-    flash_range_program(address, data, size);
-    core_util_critical_section_exit();
+    if ((address % FLASH_PAGE_SIZE) != 0) {
+        return -1;
+    }
+
+    uint8_t buf[FLASH_PAGE_SIZE];
+
+    for (int j = 0; j < size/FLASH_PAGE_SIZE; j++) {
+        for (int i = 0; i < FLASH_PAGE_SIZE; i++) {
+            buf[i] = data[j*FLASH_PAGE_SIZE + i];
+        }
+        address = address + j*FLASH_PAGE_SIZE;
+        core_util_critical_section_enter();
+        flash_range_program(address, buf, FLASH_PAGE_SIZE);
+        core_util_critical_section_exit();
+    }
+
 
     return 0;
 
-- 
2.30.2

